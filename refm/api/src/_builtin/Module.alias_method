#@since 3.0
--- alias_method(new, original) -> Symbol
#@else
--- alias_method(new, original) -> self
#@end

メソッドの別名を定義します。

#@samplecode 例
#@since 3.0
module Kernel
  alias_method :hoge, :puts # => :hoge
  alias_method "foo", :puts # => :foo
end
#@else
module Kernel
  alias_method :hoge, :puts # => Kernel
end
#@end
#@end

alias との違いは以下の通りです。

  * メソッド名は [[c:String]] または [[c:Symbol]] で指定します
  * グローバル変数の別名をつけることはできません

また、クラスメソッドに対して使用することはできません。

@param new 新しいメソッド名。[[c:String]] または [[c:Symbol]] で指定します。

@param original 元のメソッド名。[[c:String]] または [[c:Symbol]] で指定します。

#@since 3.0
@return 作成したエイリアスのメソッド名を表す [[c:Symbol]] を返します。
#@else
@return self を返します。
#@end

@see [[ref:d:spec/def#alias]]

#@samplecode 例
module Kernel
  alias_method :foo, :puts
end

foo "bar" # bar
#@end
